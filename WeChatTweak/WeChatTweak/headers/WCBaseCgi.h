//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMObject.h"
#import <Foundation/Foundation.h>

@class NSData, NSString, WXPBGeneratedMessage;
@protocol WCBaseCgiDelegate;
@protocol PBMessageObserverDelegate;
@protocol PBCoding;

@interface WCBaseCgi : MMObject <PBMessageObserverDelegate, PBCoding>

+ (void)initialize;
+ (void)PBArrayAdd_eventID;
+ (void)PBArrayAdd_cacheExpiredDate;
+ (void)PBArrayAdd_cacheDuration;
+ (void)PBArrayAdd_cacheType;
+ (void)PBArrayAdd_cgiStatus;
+ (void)PBArrayAdd_isAutoLifeCycle;
+ (void)PBArrayAdd_isNeedNotify;
+ (void)PBArrayAdd_retryCount;
+ (void)PBArrayAdd_request;
+ (void)PBArrayAdd_cgiNumber;
+ (void)PBArrayAdd_debugModuleName;

@property(retain, nonatomic) WXPBGeneratedMessage *cacheResponse;
@property(nonatomic) Class cacheResponseClass;
@property(nonatomic) int longPollingTimeout;
@property(nonatomic) _Bool longPolling;
@property(nonatomic) __weak id <WCBaseCgiDelegate> baseDelegate;
@property(copy, nonatomic) NSData *respDecryptKey;
@property(nonatomic) double totalTimeout;
@property(nonatomic) double serverProcessCost;
@property(nonatomic) _Bool isTreatBaseResponseRetAsNetworkingRet;
@property(nonatomic) unsigned int eventID;
@property(nonatomic) unsigned long long cacheExpiredDate;
@property(nonatomic) unsigned long long cacheDuration;
@property(nonatomic) unsigned long long cacheType;
@property(nonatomic) unsigned long long cgiStatus;
@property(nonatomic) _Bool isAutoLifeCycle;
@property(nonatomic) _Bool isNeedNotify;
@property(nonatomic) unsigned int retryCount;
@property(retain, nonatomic) WXPBGeneratedMessage *request;
@property(nonatomic) unsigned int cgiNumber;
@property(copy, nonatomic) NSString *debugModuleName;
- (void)MessageReturn:(id)arg1 Event:(unsigned int)arg2;
- (void)didFailWithError:(id)arg1 response:(id)arg2;
- (void)didGetResponse:(id)arg1;
- (void)cacheResponse:(id)arg1;
- (id)cacheResponseKey;
- (id)expiredDateKey;
- (void)loadCacheImmediately;
- (_Bool)loadCache;
- (void)failWithNetworking:(int)arg1 m_uiMessage:(int)arg2 response:(id)arg3;
- (void)failWithNetworking:(int)arg1 response:(id)arg2;
- (void)startWithoutCache;
- (_Bool)prepareStart;
- (void)clearResponseCache;
- (void)start;
- (void)dealloc;
- (id)init;
- (id)getPBPropertyTable;
@property(retain, nonatomic) id ftsUserData;

@end

